// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: unified/v1/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// The following error codes are not stated explicitly in the each rpc, but may be returned.
///   - shared.InvalidArgument
///   - shared.Unauthenticated
///   - shared.Unauthorized
public protocol Unified_V1_UnifiedServiceClientInterface: Sendable {
    /// GetByDate returns the resources related to the given date.
    /// Only registered courses which will be held on the given date will be returned.
    @discardableResult
    func getByDate(request: Unified_V1_GetByDateRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Unified_V1_GetByDateResponse>) -> Void) -> Connect.Cancelable

    /// GetByDate returns the resources related to the given date.
    /// Only registered courses which will be held on the given date will be returned.
    @available(iOS 13, *)
    func getByDate(request: Unified_V1_GetByDateRequest, headers: Connect.Headers) async -> ResponseMessage<Unified_V1_GetByDateResponse>
}

/// Concrete implementation of `Unified_V1_UnifiedServiceClientInterface`.
public final class Unified_V1_UnifiedServiceClient: Unified_V1_UnifiedServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @discardableResult
    public func getByDate(request: Unified_V1_GetByDateRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Unified_V1_GetByDateResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/unified.v1.UnifiedService/GetByDate", idempotencyLevel: .noSideEffects, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func getByDate(request: Unified_V1_GetByDateRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Unified_V1_GetByDateResponse> {
        return await self.client.unary(path: "/unified.v1.UnifiedService/GetByDate", idempotencyLevel: .noSideEffects, request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let getByDate = Connect.MethodSpec(name: "GetByDate", service: "unified.v1.UnifiedService", type: .unary)
        }
    }
}
